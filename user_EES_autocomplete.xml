<AutoComplete language="EES">
    <KeyWord name="qcond_subp" func="1" />
    <KeyWord name="qconv_subp" func="1" />
    <!-- Agrega más palabras clave y funciones aquí -->
</AutoComplete>
"directivas"

$Keyboard US
$UnitSystem SI K kPa kJ mass
$CHECKUNITS AutoOn
$Bookmark BookmarkName	//useful to bookmark procedures, functions, modules or subprograms
$VarInfo Var Units='EEs_Units'	//set var units within a procedure or function
$IFNOT PARAMETRICTABLE=Table_Name$
	Var=	"set Var para param"
$ENDIF
$DOLAST
	Opps //compute at the end of the compilation. e.g., array, param, lookup tables
$ENDDOLAST

"functions, procedures, and subprograms"

FUNCTION function(,:,)	//useful as aliases for EES built-in functions
{$function
'help info'}
	:=
END

PROCEDURE procedure(,:,)
{$procedure
'help info'}
	:=
END

SUBPROGRAM subprogram(,:,)	//not capable of LOGIC statements
{$subprogram
'help info'}
	=
END

"personal functions"

Subprogram qcond_subp(k,A,T_1,T_2,L: Q_dot_cond)
{$qcond_subp 
calculates the rate of heat transfered, using
the expected variables for the non differential form of conduction}
	$VarInfo k Units='W/m-K'
	$VarInfo A Units='m^2'
	$VarInfo T_1 Units='K'
	$VarInfo T_2 Units='K'
	$VarInfo L Units='m'
 
	$VarInfo Q_dot_cond Units='W'	
	Q_dot_cond=k*A*(T_1-T_2)/( L )
End
Subprogram qconv_subp(h,A,T_0,T_infinity: Q_dot_conv)
{$qconv_subp 
calculates the rate of heat transfered, using
the expected variables for the non differential form of convenction}
	$VarInfo h Units='W/m^2-K'
	$VarInfo A Units='m^2'
	$VarInfo T_0 Units='K'
	$VarInfo T_infinity Units='K'
 
	$VarInfo Q_dot_conv Units='W'	
	Q_dot_conv=h*A*(T_0-T_infinity)
End
Subprogram qrad_subp(epsilon,A,T_0,T_surr: Q_dot_rad)
{$qrad_subp 
calculates the rate of heat transfered, using
the expected variables for the non differential form of radiation}
	$VarInfo epsilon Units='-'
	$VarInfo A Units='m^2'
	$VarInfo T_0 Units='K'
	$VarInfo T_surr Units='K'
 
	$VarInfo Q_dot_rad Units='W'	
	Q_dot_rad=epsilon*sigma#*A*(T_0^4-T_surr^4)
End
Subprogram qressistance_subp(T_1,T_2,R: Q_dot)
{$QR_subp 
calculates the rate of heat transfered, using
the termic ressistance approach}
	$VarInfo T_1 Units='K'
	$VarInfo T_2 Units='K'
	$VarInfo R Units='K/W'
	
	$VarInfo Q_dot_rad Units='W'	
	Q_dot=(T_1-T_2)/R
End
Subprogram rcondpp_subp(L,k,A: R_cond_plana)
{$rcondpp_subp
Calculate the ressistance for a flat wall}
	$VarInfo L Units='m'
	$VarInfo k Units='W/m-K'
	$VarInfo A Units='m^2'
	
	$VarInfo R_cond_plana Units='K/W'	
	R_cond_plana=L/( k*A )
End


"2. suposiciones"

{-estado estable
-solo convección
-props ctes}

"conversión de unidades"

[cm]*convert(cm,m)
converttemp(C,K,[C])

"áreas"

A_s=2*pi#*(D/2)*L	"área superficial de un cilindro"

Subprogram QR_subp(T_1,T_2,R: Q_dot)
{$QR_subp 
calculates the rate of heat transfered, using
the termic ressistance approach}
	$VarInfo T_1 Units='K'
	$VarInfo T_2 Units='K'
	$VarInfo R Units='K/W'
	
	$VarInfo Q_dot_rad Units='W'	
	Q_dot=(T_1-T_2)/R
End
